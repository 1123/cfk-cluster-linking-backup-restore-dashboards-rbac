apiVersion: platform.confluent.io/v1beta1
kind: KRaftController
metadata:
  name: backup-kraft
  namespace: confluent
spec:
  dataVolumeCapacity: 10G
  image:
    application: docker.io/confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
#     application: docker.io/confluentinc/cp-server:7.8.0-does-not-exist
#     init: confluentinc/confluent-init-container:2.10.0-does-not-exist
  replicas: 1
---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: backup-kafka
  namespace: confluent
spec:
  dataVolumeCapacity: 400G
  image:
    application: docker.io/confluentinc/cp-server:7.8.0
    init: confluentinc/confluent-init-container:2.10.0
#     application: docker.io/confluentinc/cp-server:7.8.0-does-not-exist
#     init: confluentinc/confluent-init-container:2.10.0-does-not-exist
  replicas: 1
  dependencies:
    kRaftController:
      clusterRef:
        name: backup-kraft
  configOverrides: 
    server: 
      - "confluent.cluster.link.metadata.topic.replication.factor=1"
      - "confluent.license.topic.replication.factor=1"
      - "confluent.metrics.reporter.topic.replicas=1"
      - "confluent.tier.metadata.replication.factor=1"
      - "confluent.metadata.topic.replication.factor=1"
      - "confluent.balancer.topic.replication.factor=1"
      - "confluent.security.event.logger.exporter.kafka.topic.replicas=1"
      - "event.logger.exporter.kafka.topic.replicas=1"
      - "offsets.topic.replication.factor=1"
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaRestClass
metadata:
  name: krc-backup
  namespace: confluent
spec:
  kafkaClusterRef:
    name: backup-kafka
  kafkaRest:
    endpoint: http://backup-kafka.confluent.svc.cluster.local:8090
